{"ast":null,"code":"var _jsxFileName = \"/Users/sishirsivakumar/user-login-form/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport LoginForm from './components/login.component'; //create function to handle login form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //declare state for user and error\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState(''); //time to create function for validation of email\n\n  let regex = new RegExp('[A-Za-z0-9]+@[A-Za-z0-9]+.com');\n\n  const useEmailValidation = email => {\n    const isEmailValid = regex.test(email); // use any validator you want\n\n    return isEmailValid;\n  }; //create function for login\n\n\n  const Login = details => {\n    _s();\n\n    console.log(details);\n\n    if (useEmailValidation(details.email)) {\n      console.log('Login Successful');\n      setUser({\n        name: details.name,\n        email: details.email\n      });\n    } else {\n      console.log('Invalid email format');\n      setError('Invalid email format');\n    }\n  }; //create function for logout\n\n\n  _s(Login, \"GEfMYpvZ005amrf5vr2FWNHGIZQ=\", false, function () {\n    return [useEmailValidation];\n  });\n\n  const Logout = () => {\n    setUser({\n      name: '',\n      email: '',\n      password: ''\n    });\n    console.log('logged out');\n  }; //write html code with react function\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: user.email !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      Login: Login,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"k29XKU3ibOIM3GcsVx9159Sc7xg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LoginForm","App","user","setUser","name","email","password","error","setError","regex","RegExp","useEmailValidation","isEmailValid","test","Login","details","console","log","Logout"],"sources":["/Users/sishirsivakumar/user-login-form/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport LoginForm from './components/login.component'\n\n//create function to handle login form\nfunction App() {\n  //declare state for user and error\n  const [user, setUser] = useState({name: '', email: '', password: ''});\n  const [error, setError] = useState('');\n\n  //time to create function for validation of email\n  let regex = new RegExp('[A-Za-z0-9]+@[A-Za-z0-9]+.com');\n\n  const useEmailValidation = (email) => {\n    const isEmailValid = regex.test(email); // use any validator you want\n    return isEmailValid;\n  };\n\n  //create function for login\n  const Login = details => {\n    console.log(details);\n    if (useEmailValidation(details.email)) {\n      console.log('Login Successful');\n      setUser({\n        name: details.name,\n        email: details.email\n      });\n    } else {\n      console.log('Invalid email format');\n      setError('Invalid email format');\n    }\n  }\n  \n  //create function for logout\n  const Logout = () => {\n    setUser({name: '', email: '', password: ''});\n    console.log('logged out');\n  }\n\n  //write html code with react function\n  return(\n    <div className=\"App\">\n      {(user.email !== \"\") ? (\n        <div className=\"Welcome\">\n          <h2>Welcome, <span>{user.name}</span></h2>\n          <button onClick={Logout}>Logout</button>\n        </div>\n      ) : (\n        <LoginForm Login={Login} error={error} />\n      )}\n    </div>\n  );\n}\n\nexport default App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,8BAAtB,C,CAEA;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EAAA;;EACb;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAACK,IAAI,EAAE,EAAP;IAAWC,KAAK,EAAE,EAAlB;IAAsBC,QAAQ,EAAE;EAAhC,CAAD,CAAhC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAHa,CAKb;;EACA,IAAIU,KAAK,GAAG,IAAIC,MAAJ,CAAW,+BAAX,CAAZ;;EAEA,MAAMC,kBAAkB,GAAIN,KAAD,IAAW;IACpC,MAAMO,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAWR,KAAX,CAArB,CADoC,CACI;;IACxC,OAAOO,YAAP;EACD,CAHD,CARa,CAab;;;EACA,MAAME,KAAK,GAAGC,OAAO,IAAI;IAAA;;IACvBC,OAAO,CAACC,GAAR,CAAYF,OAAZ;;IACA,IAAIJ,kBAAkB,CAACI,OAAO,CAACV,KAAT,CAAtB,EAAuC;MACrCW,OAAO,CAACC,GAAR,CAAY,kBAAZ;MACAd,OAAO,CAAC;QACNC,IAAI,EAAEW,OAAO,CAACX,IADR;QAENC,KAAK,EAAEU,OAAO,CAACV;MAFT,CAAD,CAAP;IAID,CAND,MAMO;MACLW,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACAT,QAAQ,CAAC,sBAAD,CAAR;IACD;EACF,CAZD,CAda,CA4Bb;;;EA5Ba,GAcPM,KAdO;IAAA,QAgBPH,kBAhBO;EAAA;;EA6Bb,MAAMO,MAAM,GAAG,MAAM;IACnBf,OAAO,CAAC;MAACC,IAAI,EAAE,EAAP;MAAWC,KAAK,EAAE,EAAlB;MAAsBC,QAAQ,EAAE;IAAhC,CAAD,CAAP;IACAU,OAAO,CAACC,GAAR,CAAY,YAAZ;EACD,CAHD,CA7Ba,CAkCb;;;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACIf,IAAI,CAACG,KAAL,KAAe,EAAhB,gBACC;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAA,qCAAa;UAAA,UAAOH,IAAI,CAACE;QAAZ;UAAA;UAAA;UAAA;QAAA,QAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEc,MAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAMC,QAAC,SAAD;MAAW,KAAK,EAAEJ,KAAlB;MAAyB,KAAK,EAAEP;IAAhC;MAAA;MAAA;MAAA;IAAA;EAPJ;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;IA/CQN,G;;KAAAA,G;AAiDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}